var searchIndex = new Map(JSON.parse('[\
["connect6",{"doc":"A library for hosting Connect6 games asynchronously.","t":"FFFCCNNNNNNNNCNNOCONONNNNNNNCNCNNNNNNNNNNNNNNFSNNNNNNNNNNNCNNNNNNNNFKFFNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNPGPFPPFFFGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOFEENNNNNNNNNNNNHHPPPGGPPPPPGFFPFGPPPPPPFPPPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFFFKFMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Builder","Control","Handle","algorithm","board","board_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","channel","clone","clone_into","cmd_tx","console","ctrl","default","event_rx","fmt","from","from","from","into","into","into","message","new","player","start","start","start_silent","subscribe","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","BitBoard","SIZE","borrow","borrow_mut","check_win","check_win_potential","clone","clone_into","contains","copy_from","fmt","from","into","mcts","new","remove","set","set_and_check_win","to_owned","try_from","try_into","type_id","MctsState","Policy","Pure","Uct","advance","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","from","from","from","into","into","into","is_terminal","new","peek","peek_best","peek_best","peek_best","pop","search","search_once","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Ascending","Axis","Black","Board","Descending","Horizontal","ParsePointError","Point","Slot","Stone","Vertical","White","adjacent","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_win","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","contains_point","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_str","get","get_mut","hash","index","index_mut","into","into","into","into","into","into","is_empty","is_full","is_occupied","make_move","move_index","new","new","opposite","partial_cmp","set_stone","size","stone","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","unit_vec","x","y","CmdSender","Receiver","Sender","accept_or_offer_draw","borrow","borrow_mut","drop","from","into","make_move","split","stone","try_from","try_into","type_id","log","read_move","AcceptOrOfferDraw","BoardFull","BothPass","Cmd","CmdError","Disconnect","Disconnected","DrawOffer","DrawOfferAccepted","Error","Event","FullCmd","FullEvent","GameEnd","GameResult","GameResultKind","IllTimed","Move","Move","Occupied","OutOfBoard","RowCompleted","Settings","Settings","Timeout","Turn","board_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmd","eq","eq","event","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","kind","stone","stone","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","winning_stone","Chaos","Console","Mcts","Player","Void","attach","attach","attach","attach","attach","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","into","into","into","into","new","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"connect6"],[45,"connect6::algorithm"],[67,"connect6::algorithm::mcts"],[103,"connect6::board"],[214,"connect6::channel"],[229,"connect6::console"],[231,"connect6::message"],[358,"connect6::player"],[397,"core::fmt"],[398,"core::fmt"],[399,"tokio::sync::mpsc::unbounded"],[400,"core::result"],[401,"core::any"],[402,"core::option"],[403,"core::fmt"],[404,"core::cmp"],[405,"core::hash"],[406,"core::convert"],[407,"alloc::string"],[408,"tokio::sync::mpsc::unbounded"]],"d":["Builder for a game.","A game control.","A game handle.","Heavily optimized algorithms for game solving.","Connect6 boards.","Sets the board size.","","","","","","","Builds the game handle.","Channel types for message passing between tasks.","","","The full command sender.","Module for console logging and input.","The game control.","","The global event receiver.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Message types that may be passed between tasks.","Creates a new builder with default values.","Player trait and implementations.","Starts a game with the given players, logging the events …","Starts the game and returns the result when the game is …","Starts a game with the given players silently.","Subscribes two notification event receivers (Black, White) …","","","","","","","","","","","A bit-packed Connect6 board with optimized win checking …","The board size used by the algorithms in this module.","","","Returns <code>true</code> if there is a six or overline of the given …","Returns <code>true</code> if there is a potential six or overline of …","","","Returns <code>true</code> if there is a stone at the point.","Copies from another <code>BitBoard</code>.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Implementations of Monte-Carlo tree search (MCTS).","Creates an empty <code>BitBoard</code>.","Removes the stone at the point.","Sets the stone at the point.","Sets the stone at the point and returns the result of …","","","","","A state for Monte-Carlo tree search (MCTS).","A policy for MCTS.","Pure MCTS policy.","UCT-based MCTS policy.","Advances through the given pair of moves, if any.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the terminal is reached.","Creates a new <code>MctsState</code>.","Returns the currently best pair of moves, without …","Peeks the best child of a node.","","","Returns the currently best pair of moves, advancing the …","Searches for the best moves within a certain amount of …","Searches once for the best moves.","","","","","","","","","","The ascending diagonal axis, with a unit vector of <code>(1, 1)</code>.","Axes on the board.","A black stone.","A Connect6 board.","The descending diagonal axis, with a unit vector of <code>(1, -1)</code>…","The horizontal axis, with a unit vector of <code>(1, 0)</code>.","An error which can be returned when parsing a point.","A 2D point with <code>u32</code> coordinates.","A slot (namely intersection) on the board.","A stone on the board, either black or white.","The vertical axis, with a unit vector of <code>(0, 1)</code>.","A white stone.","Returns the adjacent point in the direction of the axis.","","","","","","","","","","","","","Returns <code>true</code> if there is a six or overline of the given …","","","","","","","","","","Returns <code>true</code> if the board contains a point.","","","","","","","","","","","","Formats a <code>Point</code> as a point reference.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Parses a point reference into a <code>Point</code>.","Returns a reference to a slot, or <code>None</code> if the point is out …","Returns a mutable reference to a slot, or <code>None</code> if the …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the slot is empty.","Returns <code>true</code> if the board is full.","Returns <code>true</code> if the slot is occupied.","Makes a move on the board.","Returns the current move index starting from <code>1</code>, or <code>0</code> if …","Creates a new <code>Board</code> with the given size.","Creates a new <code>Point</code> with the given coordinates.","Returns the opposite stone.","","Sets the stone in the slot.","Returns the size of the board.","Returns the stone in the slot, or <code>None</code> if the slot is …","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the unit vector in the direction of the axis.","The horizontal coordinate.","The vertical coordinate.","A stone-specific command sender.","","","Accepts or offers a draw.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Makes a move.","Splits a full command sender into stone-specific (Black, …","Returns the stone of this sender.","","","","Logs the game events in the console.","Reads a move from the console.","Accepts or offers a draw.","The board is full.","Both players passed.","A command sent from the player task.","Errors occurred by an invalid command.","Disconnects when the sender is dropped.","Player or server disconnected.","A draw is offered.","A draw offer has been accepted.","Error occurred by the last command.","An event sent from the game task.","A full command sent from the player task.","A full event sent from the game task.","Game ended.","The result of a game.","The reason for the end of a game.","Ill-timed command.","Move made.","A move.","The slot at the point is occupied.","The point is out of board.","A row has been completed.","The settings of a game.","Game settings.","Timeout.","Your turn.","The board size.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The command.","","","The event.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The kind of the result.","The stone the event is associated with.","The stone that sent the command, or <code>None</code> if sent …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The winning stone, or <code>None</code> for a draw.","A player that makes totally randomized moves.","A player that inputs moves from the console.","A player that uses Monte-Carlo tree search.","A trait for Connect6 players.","A player that passes on every move.","Attaches the player to the game.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new <code>Mcts</code> with the given parameters.","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,3,9,1,3,9,1,1,0,1,1,3,0,3,1,3,1,3,9,1,3,9,1,0,1,0,3,9,3,9,1,3,9,1,3,9,1,3,9,1,0,0,15,15,15,15,15,15,15,15,15,15,15,0,15,15,15,15,15,15,15,15,0,0,0,0,19,24,25,19,24,25,19,19,24,25,19,24,25,19,19,19,19,21,24,25,19,19,19,24,25,19,24,25,19,24,25,19,28,0,17,0,28,28,0,0,0,0,28,17,16,29,17,28,16,32,30,29,17,28,16,32,30,29,17,28,16,30,17,28,16,30,16,29,29,17,28,16,16,32,29,17,17,28,16,16,32,32,30,29,17,28,16,16,32,30,16,29,29,16,29,29,29,17,28,16,32,30,30,29,30,29,29,29,16,17,16,30,29,30,17,28,16,30,29,17,16,32,29,17,28,16,32,30,29,17,28,16,32,30,29,17,28,16,32,30,28,16,16,0,0,0,38,38,38,38,38,38,38,38,38,38,38,38,0,0,45,43,43,0,0,45,43,11,43,11,0,0,0,11,0,0,44,11,45,44,44,43,0,11,43,11,42,42,7,43,11,41,44,45,39,42,7,43,11,41,44,45,39,42,7,43,11,41,44,45,39,42,7,43,11,41,44,45,39,39,7,43,41,42,7,43,43,11,41,44,44,45,39,42,7,43,11,41,44,45,39,42,7,43,11,41,44,45,39,7,41,39,42,7,43,11,41,44,45,39,43,44,42,7,43,11,41,44,45,39,42,7,43,11,41,44,45,39,42,7,43,11,41,44,45,39,7,0,0,0,0,0,8,46,47,48,49,46,47,48,49,46,47,48,49,46,47,48,49,46,47,48,49,49,46,47,48,49,46,47,48,49,46,47,48,49],"f":[0,0,0,0,0,[[1,2],1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,3],0,[1,1],[[-1,-2],4,[],[]],0,0,0,[[],1],0,[[1,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],1],0,[[3,-1,-2],7,8,8],[[[10,[9]]],7],[[3,-1,-2],7,8,8],[9,[[4,[[12,[11]],[12,[11]]]]]],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[15,16,17],18],[[15,16,17],18],[15,15],[[-1,-2],4,[],[]],[[15,16],18],[[15,15],4],[[15,5],6],[-1,-1,[]],[-1,-2,[],[]],0,[[],[[10,[15]]]],[[15,16,17],4],[[15,16,17],4],[[15,16,17],18],[-1,-2,[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],0,0,0,0,[[[19,[-1]],[20,[[4,[16,16]]]]],4,21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]],5],6,[22,21]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[19,[-1]]],18,21],[[-1,23],[[19,[-1]]],21],[[[19,[-1]]],[[4,[16,16]]],21],0,0,0,[[[19,[-1]]],[[4,[16,16]]],21],[[[19,[-1]],26],27,21],[[[19,[-1]]],27,21],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],0,0,0,0,0,0,0,0,0,0,0,0,[[16,28,18],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[29,16,17],18],[17,17],[28,28],[16,16],[30,30],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[16,16],31],[[29,16],18],[29,4],[[17,17],18],[[28,28],18],[[16,16],18],[[16,[4,[2,2]]],18],[[32,32],18],[[29,5],6],[[17,5],6],[[17,5],6],[[28,5],6],[[16,5],6],[[16,5],6],[[32,5],6],[[32,5],6],[[30,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[4,[2,2]]],16],[-1,-1,[]],[-1,-1,[]],[33,[[13,[16,-1]]],[]],[[29,16],[[20,[30]]]],[[29,16],[[20,[30]]]],[[16,-1],4,34],[[29,-1],30,[[35,[16]]]],[[29,-1],30,[[35,[16]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[30,18],[29,18],[30,18],[[29,[4,[16,16]],17],4],[29,2],[2,29],[[2,2],16],[17,17],[[16,16],[[20,[31]]]],[[30,[20,[17]]],4],[29,2],[30,[[20,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,36,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[28,[[4,[37,37]]]],0,0,0,0,0,[38,4],[-1,-2,[],[]],[-1,-2,[],[]],[38,4],[-1,-1,[]],[-1,-2,[],[]],[[38,[20,[[4,[16,16]]]]],4],[[[40,[39]]],[[4,[38,38]]]],[38,17],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[[[12,[41]]],4],[17,[[20,[[4,[16,16]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,42],[7,7],[43,43],[11,11],[41,41],[44,44],[45,45],[39,39],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[[7,7],18],[[43,43],18],0,[[42,5],6],[[7,5],6],[[43,5],6],[[43,5],6],[[11,5],6],[[41,5],6],[[44,5],6],[[44,5],6],[[45,5],6],[[39,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,36,[]],[-1,36,[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],0,0,0,0,0,0,[[8,[12,[11]],38],4],[[46,[12,[11]],38],4],[[47,[12,[11]],38],4],[[48,[12,[11]],38],4],[[[49,[-1]],[12,[11]],38],4,21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,23,26],[[49,[-1]]],21],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[-1,14,[]],[-1,14,[]]],"c":[],"p":[[5,"Builder",0],[1,"u32"],[5,"Handle",0],[1,"tuple"],[5,"Formatter",397],[8,"Result",397],[5,"GameResult",231],[10,"Player",358],[5,"Control",0],[5,"Box",398],[6,"Event",231],[5,"UnboundedReceiver",399],[6,"Result",400],[5,"TypeId",401],[5,"BitBoard",45],[5,"Point",103],[6,"Stone",103],[1,"bool"],[5,"MctsState",67],[6,"Option",402],[10,"Policy",67],[10,"Debug",397],[1,"u64"],[5,"Pure",67],[5,"Uct",67],[5,"Duration",403],[1,"usize"],[6,"Axis",103],[5,"Board",103],[5,"Slot",103],[6,"Ordering",404],[5,"ParsePointError",103],[1,"str"],[10,"Hasher",405],[10,"Into",406],[5,"String",407],[1,"i32"],[5,"CmdSender",214],[5,"FullCmd",231],[5,"UnboundedSender",399],[5,"FullEvent",231],[5,"Settings",231],[6,"GameResultKind",231],[6,"CmdError",231],[6,"Cmd",231],[5,"Console",358],[5,"Void",358],[5,"Chaos",358],[5,"Mcts",358]],"b":[[142,"impl-PartialEq-for-Point"],[143,"impl-PartialEq%3C(u32,+u32)%3E-for-Point"],[146,"impl-Display-for-Stone"],[147,"impl-Debug-for-Stone"],[149,"impl-Debug-for-Point"],[150,"impl-Display-for-Point"],[151,"impl-Debug-for-ParsePointError"],[152,"impl-Display-for-ParsePointError"],[296,"impl-Debug-for-GameResultKind"],[297,"impl-Display-for-GameResultKind"],[300,"impl-Debug-for-CmdError"],[301,"impl-Display-for-CmdError"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
